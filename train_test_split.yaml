# PIPELINE DEFINITION
# Name: make-data-splits
# Inputs:
#    dataset_full: system.Dataset
# Outputs:
#    dataset_test: system.Dataset
#    dataset_train: system.Dataset
#    dataset_val: system.Dataset
components:
  comp-make-data-splits:
    executorLabel: exec-make-data-splits
    inputDefinitions:
      artifacts:
        dataset_full:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        dataset_test:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        dataset_train:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        dataset_val:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-make-data-splits:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - make_data_splits
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef make_data_splits(\n    dataset_full: Input[Dataset],\n    dataset_train:\
          \ Output[Dataset],\n    dataset_val: Output[Dataset],\n    dataset_test:\
          \ Output[Dataset]\n):\n    import pandas as pd\n    from src.preprocess\
          \ import make_data_splits\n\n    df_agg = pd.read_csv(dataset_full.path)\n\
          \    df_agg.fillna('NA', inplace=True)\n\n    df_train, df_val, df_test\
          \ = make_data_splits(df_agg)\n    print(f\"{len(df_train)} samples in train\"\
          )\n    print(f\"{len(df_val)} samples in val\")\n    print(f\"{len(df_test)}\
          \ samples in test\")\n\n    df_train.to_csv(dataset_train.path, index=False)\n\
          \    df_val.to_csv(dataset_val.path, index=False)\n    df_test.to_csv(dataset_test.path,\
          \ index=False)\n\n"
        image: eu.gcr.io/gcp-learn-430710/thelook_training_demo:latest
pipelineInfo:
  name: make-data-splits
root:
  dag:
    outputs:
      artifacts:
        dataset_test:
          artifactSelectors:
          - outputArtifactKey: dataset_test
            producerSubtask: make-data-splits
        dataset_train:
          artifactSelectors:
          - outputArtifactKey: dataset_train
            producerSubtask: make-data-splits
        dataset_val:
          artifactSelectors:
          - outputArtifactKey: dataset_val
            producerSubtask: make-data-splits
    tasks:
      make-data-splits:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-make-data-splits
        inputs:
          artifacts:
            dataset_full:
              componentInputArtifact: dataset_full
        taskInfo:
          name: make-data-splits
  inputDefinitions:
    artifacts:
      dataset_full:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
  outputDefinitions:
    artifacts:
      dataset_test:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
      dataset_train:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
      dataset_val:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
